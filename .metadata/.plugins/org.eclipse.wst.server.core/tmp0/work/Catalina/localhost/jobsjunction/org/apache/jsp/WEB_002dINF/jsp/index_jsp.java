/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-04-27 17:43:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/NIIT/Online%20Classes/Term-6%20Capstone%20project/JOBS%20JUNCTION/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jobsjunction/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1619544164500L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title>Welcome to JobsJunction!</title>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/index.css\">\t\n");
      out.write("\t<style>\n");
      out.write("\t\t#thirdHeading{\n");
      out.write("\t\t\tfont-family : Brush Script MT;\n");
      out.write("\t\t\tcolor : #8b008b;\n");
      out.write("\t\t\ttext-shadow: 2pt 2pt white;\n");
      out.write("\t\t}\n");
      out.write("\t\t@media only screen and (min-width: 768px){\n");
      out.write("\t\t\t#thirdHeading{\n");
      out.write("\t\t\t\tfont-size: 50pt;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t#welcomeHeading{\n");
      out.write("\t\t\t\tmargin-top: 5%;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t#fifthHeading{\n");
      out.write("\t\t\tfont-size: 30pt;\n");
      out.write("\t\t}\n");
      out.write("\t</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");

	if(session.getAttribute("username")!=null){
			response.sendRedirect("loginSuccess");
		}

      out.write("\t\n");
      out.write("\t<div id=\"navbar\">\n");
      out.write("\t\t<image src = \"resources/images/logo512.png\" alt = \"JobsJunction\" style=\"width:100px;height:auto; padding:1%\" id=\"onlyImage\"/>\n");
      out.write("\t\t<a id=\"loginLink\" href=\"loginPage\">Login/SignUp</a>\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"jobDiv\">\n");
      out.write("\t\t<h2 id = \"welcomeHeading\">Welcome to Jobs Junction!</h2>\n");
      out.write("\t\t<h3 id = \"secondHeading\">Finding or providing jobs is now so easy!</h3>\n");
      out.write("\t\t<h1 id = \"thirdHeading\"></h3>\n");
      out.write("\t\t<h2 id = \"fourthHeading\">Get yourself registered today!</h3>\n");
      out.write("\t\t<h2 id = \"fifthHeading\">All the best!</h1>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<footer>\n");
      out.write("\t\t<p>Created By Aayush Chourasiya!</p>\n");
      out.write("\t</footer>\n");
      out.write("\t<script>\n");
      out.write("\tvar changeQuote = getRandomNumberBetween(1, 3);\n");
      out.write("\tfunction getRandomNumberBetween(min,max){\n");
      out.write("\t    return Math.floor(Math.random()*(max-min+1)+min);\n");
      out.write("\t}\n");
      out.write("\tvar thirdHeading = document.getElementById(\"thirdHeading\");\n");
      out.write("\tswitch(changeQuote){\n");
      out.write("\tcase 1 : \n");
      out.write("\t\tthirdHeading.innerHTML = \"Choose a job you love, and you will never have\" +\"<br />\"+ \"to work a day in your life!\";\n");
      out.write("\t\tbreak;\n");
      out.write("\tcase 2 : \n");
      out.write("\t\tthirdHeading.innerHTML = \"Work to become, not to acquire!\";\n");
      out.write("\t\tbreak;\n");
      out.write("\tcase 3 : \n");
      out.write("\t\tthirdHeading.innerHTML = \"It's not what you achieve, it's what you overcome.\" +\"<br />\"+ \"That's what defines your career!\";\n");
      out.write("\t\tbreak;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tvar image = document.getElementById(\"onlyImage\");\n");
      out.write("\timage.style.cursor = \"pointer\";\n");
      out.write("\timage.addEventListener('click', event);\n");
      out.write("\tfunction event(){\n");
      out.write("\t\t\tdocument.location.href = \"/jobsjunction/\";\n");
      out.write("\t\t}\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
